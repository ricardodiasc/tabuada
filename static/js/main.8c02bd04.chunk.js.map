{"version":3,"sources":["logo.svg","logic/GameLogic.js","components/GameOver.js","components/DigitButton.js","components/Keyboard.js","components/Tabuada.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","GameLogic","props","Grid","score","record","DigitButton","digit","onClick","Button","style","margin","variant","color","Keyboard","onKeyPressed","item","container","xs","sm","md","lg","alignItems","justify","map","num","key","gameLogic","constructor","this","gameStarted","gameOver","n1","n2","result","startGame","bind","testResult","gameInProgress","_newChallenge","_getRandom","max","Math","floor","random","guess","withStyles","theme","root","flexGrow","paper","width","height","chalenge","setN1","useState","setN2","setResult","newGame","answer","registerNumber","e","a","parseInt","target","innerText","GameOver","Paper","fontSize","padding","App","Component","render","className","src","logo","alt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8c02bd04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","class GameLogic {\r\n    /**\r\n     * Construc a new game logic\r\n     * \r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        this.gameStarted = false;\r\n        this.gameOver = false;\r\n        this.score = 0;\r\n        this.n1 = 0;\r\n        this.n2 = 0;\r\n        this.result = '';\r\n\r\n        this.record = 0;\r\n\r\n        this.startGame.bind(this);\r\n        this.testResult.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Start a new game\r\n     */\r\n    startGame() {\r\n        this.gameInProgress = true;\r\n        this.gameOver = false;\r\n        this.score = 0;\r\n        this._newChallenge();            \r\n    }\r\n\r\n    _newChallenge() {\r\n        this.n1 = this._getRandom(10);\r\n        this.n2 = this._getRandom(10);\r\n        this.result = this.n1 * this.n2;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Generate a random number between 0 and max parameter\r\n     * \r\n     * @param {number} max max number generation from 0 \r\n     */\r\n    _getRandom(max) {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n\r\n    /**\r\n     * Test if the guess maches with result expected\r\n     * \r\n     * @param {number} guess \r\n     * @returns {boolean} - Return true if the guess maches with the expected result\r\n     */\r\n    testResult(guess) {\r\n        if(guess === this.result) {\r\n            this.score = this.score + 1;\r\n            this._newChallenge();\r\n        } else {\r\n            this.gameInProgress = false;\r\n            this.gameOver = true;\r\n            if(this.score > this.record) {\r\n                this.record = this.score;\r\n            }\r\n            this.gameInProgress = false;\r\n        }\r\n        return this.gameInProgress;\r\n    }\r\n}\r\n\r\nexport default GameLogic;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default  (props) => {\r\n    return (\r\n    <Grid>\r\n        <h1>Game Over</h1>\r\n        <p>Acertos: {props.score}</p>\r\n        <p>Recorde: {props.record}</p>\r\n    </Grid>\r\n)};\r\n\r\n\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst DigitButton = ({ digit, onClick }) => {\r\n  return (\r\n    <Button\r\n      style={{ margin: \"1px 1px\" }}\r\n      onClick={onClick}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n    >\r\n      {digit}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DigitButton;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DigitButton from \"./DigitButton\";\r\n\r\nconst Keyboard = ({ onKeyPressed }) => {\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      xs={7}\r\n      sm={4}\r\n      md={3}\r\n      lg={2}\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n    >\r\n      {[7, 8, 9, 4, 5, 6, 1, 2, 3, 0].map((num) => (\r\n        <DigitButton key={num} digit={num} onClick={onKeyPressed} />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport GameLogic from \"../logic/GameLogic\";\r\nimport GameOver from \"./GameOver\";\r\nimport Keyboard from \"./Keyboard\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    width: 100,\r\n    height: 140,\r\n  },\r\n\r\n  chalenge: {\r\n    height: 120,\r\n  },\r\n});\r\n\r\nconst gameLogic = new GameLogic();\r\n\r\nconst Tabuada = () => {\r\n  const [n1, setN1] = useState(gameLogic.n1);\r\n  const [n2, setN2] = useState(gameLogic.n2);\r\n  const [result, setResult] = useState(gameLogic.result);\r\n\r\n  const newGame = () => {\r\n    gameLogic.startGame();\r\n\r\n    setN1(gameLogic.n1);\r\n    setN2(gameLogic.n2);\r\n  };\r\n\r\n  const answer = () => {\r\n    if (result !== \"\" && gameLogic.testResult(result)) {\r\n      //TODO: Change to useTabuadaGameLogic com objeto\r\n      setN1(gameLogic.n1);\r\n      setN2(gameLogic.n2);\r\n    }\r\n\r\n    setResult(\"\");\r\n  };\r\n\r\n  const registerNumber = (e) => {\r\n    let a = parseInt(result + e.target.innerText);\r\n    setResult(a);\r\n  };\r\n\r\n  const renderMainMenu = () => {\r\n    return (\r\n      <Grid container alignItems=\"center\" justify=\"center\">\r\n        <Button color=\"secondary\" variant=\"contained\" onClick={newGame}>\r\n          Iniciar novo jogo\r\n        </Button>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const renderGame = () => {\r\n    return (\r\n      <Grid container item xs={12} alignItems=\"center\" justify=\"center\">\r\n        <Grid item xs={10} sm={10}>\r\n          <Paper>\r\n            <span style={{ fontSize: 23, padding: 10 }}>{n1}</span>X\r\n            <span style={{ fontSize: 23, padding: 10 }}>{n2}</span>=\r\n            <span style={{ fontSize: 24, padding: 10 }}>{result}</span>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid\r\n          xs={12}\r\n          sm={12}\r\n          container\r\n          item\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        />\r\n\r\n        <Keyboard onKeyPressed={registerNumber} />\r\n        <Grid container item xs={12} alignItems=\"center\" justify=\"center\">\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={answer}>\r\n            Responder\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {gameLogic.gameOver && (\r\n        <GameOver score={gameLogic.score} record={gameLogic.record} />\r\n      )}\r\n      {gameLogic.gameInProgress && !gameLogic.gameOver && renderGame()}\r\n\r\n      {!gameLogic.gameInProgress && renderMainMenu()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Tabuada);\r\n","import React, { Component } from 'react';\r\nimport Tabuada from './components/Tabuada';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h1 className=\"App-title\">Desafio Tabuada</h1>\r\n        </header>\r\n        <Tabuada />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'typeface-roboto';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}